################################################################################
## 注释                                                                       ##
################################################################################

snippet !1 "!1"
!-------------------------------------------------------------------------------
${1}
endsnippet

snippet !2 "!2"
!===============================================================================
${1}
endsnippet

snippet != "!="
!===============================================================================
${1}
endsnippet

snippet !- "!-" 
!-------------------------------------------------------------------------------
${1}
endsnippet

snippet contains "contains"
!===============================================================================

contains

!===============================================================================
${1}
endsnippet

################################################################################
## 程序结构                                                                   ##
################################################################################

snippet pro "program"
program ${1:name}
	implicit none
	${2}
end program $1
endsnippet

snippet fun "function"
function ${1:name}(${2}) result(${3})
	implicit none
	${4}
end function $1
endsnippet

snippet sub "sub"
subroutine ${1:name}(${2})
	implicit none
	${3}
end subroutine $1
endsnippet

snippet module "module"
module ${1:name}
	implicit none
	${2}
end module $1
endsnippet


################################################################################
## 过程控制                                                                   ##
################################################################################

snippet if "if"
if (${1:condition}) then
	${2}
end if
endsnippet

snippet ife "ife"

if (${1:condition}) then
	${2:code}
else
	${3:code}
end if
endsnippet

snippet ifs "ifs"
if (${1:condition}) ${2}
endsnippet

snippet do "do"
do ${1:n} = ${2:1}, ${3:m}
	${4}
end do
endsnippet

snippet dow "dow"
do while (${1:condition})
	${2}
end do
endsnippet

################################################################################
## 数据类型                                                                   ##
################################################################################

snippet type "type"
type ${1:name}
	${3}
end type $1
endsnippet

snippet t "t"
type(${1}) :: ${2}
endsnippet

snippet arr "arr"
${1:type}, dimension(${2}) :: ${3}
endsnippet

snippet ac "allocate"
allocate(${1:arr})
endsnippet

snippet const "const"
${1:type}, parameter :: ${3} = ${4}
endsnippet

snippet i "i"
integer :: ${1}
endsnippet

snippet ia "ia" 
integer,allocatable :: ${1}
endsnippet

snippet ik "ik"
integer(kind=${1:4}) :: ${2}
endsnippet

snippet r "r"
real :: ${1}
endsnippet

snippet ra "ra" 
real,allocatable :: ${1}
endsnippet

snippet rk "rk"
real(kind=${1:4}) :: ${2}
endsnippet

snippet c "c"
character :: ${1}
endsnippet

snippet s "s"
character(len=${1:9}) :: ${2}
endsnippet

snippet ck "ck"
complex(kind=${1:4}) :: ${2}
endsnippet

snippet l "l"
logical :: ${1}
endsnippet

################################################################################
## 文件操作                                                                   ##
################################################################################

snippet open "open"
open (unit=${1:10}, file=${2:fname}, ${3:status="unknown"})
${4}
close(${1})
endsnippet

snippet openb "openb"
open(unit   = ${1:40},            &
     file   = ${2:fname},         &
     status = "unknown",     &
     access = "direct",      &
     form   = "unformatted", &
     recl   = ${3:n*4})
${4:code}
close(${1})
endsnippet

snippet wr "write"
write(${1:*},${2:*}) ${3}
endsnippet

snippet wrb "writeb"
write(${1:40},rec=${2:1}) ${3}
endsnippet

snippet pr "print"
print ${1:*}, ${2}
endsnippet

snippet read "read"
read(${1:*},${2:*}) ${3}
endsnippet

snippet cl "close" 
close(${1:unit})
endsnippet
